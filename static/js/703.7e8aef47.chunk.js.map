{"version":3,"file":"static/js/703.7e8aef47.chunk.js","mappings":"0OAEaA,EAAOC,EAAAA,EAAAA,GAAH,8C,kBCAJC,EAAOD,EAAAA,EAAAA,GAAH,gIAQJE,EAASF,EAAAA,EAAAA,OAAH,oL,SCOnB,EAboB,SAAC,GAAuB,IAAtBG,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAE9B,GAAmDC,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBC,UAGxB,OACI,UAACR,EAAD,WAAOG,EAAP,KAAeC,GACf,SAACH,EAAD,CAAQQ,QAAS,kBAAMH,EAAcJ,IAAKQ,SAAWH,EAArD,SAAoEA,EAAa,cAAgB,eCEvG,EAVoB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SAErB,OACE,SAACb,EAAD,UACKa,EAASC,KAAI,SAAAC,GAAO,OAAI,SAAC,GAAD,UAAkCA,GAAhBA,EAAQX,UCL9CY,EAAkBf,EAAAA,EAAAA,GAAH,8EAMfgB,EAAiBhB,EAAAA,EAAAA,IAAH,wB,kBCNdiB,EAAYjB,EAAAA,EAAAA,IAAH,6DAKTkB,EAAQlB,EAAAA,EAAAA,MAAH,2CAILmB,EAAQnB,EAAAA,EAAAA,MAAH,4CCUlB,EAjBqB,WAEnB,IAAMoB,GAAWC,EAAAA,EAAAA,MASf,OAAO,SAACJ,EAAD,WAAW,UAACC,EAAD,mCAChB,SAACC,EAAD,CAAOG,KAAK,OAAOC,SAPD,SAACC,GAEvBJ,GAASK,EAAAA,EAAAA,IAAUD,EAAME,OAAOC,iBCkBlC,EAtBqB,WAEjB,OAA6CC,EAAAA,EAAAA,MAA7C,IAAQC,KAAAA,OAAR,MAAe,GAAf,EAAmBC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,UAGzBC,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOR,SAG9CS,EAAmBP,EAAKM,QAAO,SAAAE,GAAG,OAAIA,EAAIjC,KAAKkC,cAAcC,SAASP,MAG7E,OAAO,UAAChB,EAAD,WACFe,IAAa,SAAChB,EAAD,uBAEbe,IAAc,SAACU,EAAA,EAAD,IAEdT,IAAa,SAAC,EAAD,IAEbF,IAAQ,SAAC,EAAD,CAAajB,SAAUwB","sources":["components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.jsx","components/FilterByName/FilterByName.styled.jsx","components/FilterByName/FilterByName.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\nmargin-bottom: 10px;\n`;","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-bottom: 10px;\nfont-size: 20px;\n`;\n\nexport const Button = styled.button`\nmargin-left: 10px;\npadding: 5px;\nborder-radius: 4px;\nborder-color: #747274;\nfont-weight: 600;\ncursor: pointer;\n&:hover {\nbackground-color: #f32b2b;\n`;","import { useDeleteContactMutation } from \"redux/contactSlice\";\nimport { Item, Button } from './ContactItem.styled';\n\n// из распыленного contact в ContactsList деструктуризируем след-щие параметры:\nconst ContactItem = ({id, name, phone}) => {\n    // ф-я возвращает ф-ю и статусы выполнения\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  \n  return (\n      <Item>{name}: {phone}\n      <Button onClick={() => deleteContact(id)} disabled={ isDeleting } >{isDeleting ? 'Deleting...' : 'Delete'}</Button>\n      </Item>\n  )\n}\n\n\nexport default ContactItem;","import { List } from './ContactList.styled';\nimport ContactItem from 'components/ContactItem';\n\nconst ContactList = ({ contacts }) => {\n  \n  return (\n    <List>        \n        {contacts.map(contact=> (<ContactItem key={contact.id} {...contact}></ContactItem>))}\n    </List>\n  )\n}\n\n\nexport default ContactList;","import styled from '@emotion/styled';\n\nexport const TitleContactsSt = styled.h1`\nmargin: 10px;\nfont-size: 40px;\ntext-align: center;\n`;\n\nexport const ContactsPageSt = styled.div`\n`;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\npadding: 10px;\ntext-align: center;\n`;\n\nexport const Label = styled.label`\nfont-weight: 700;\n`;\n\nexport const Input = styled.input`\nmargin-left: 10px;\n`;","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { Container, Label, Input } from './FilterByName.styled';\n\nconst FilterByName = () => {\n  // получает ссылку на функцию для отправки действий\n  const dispatch = useDispatch();\n\n  // записывает в filter(store) вводимые в input(FilterByName) данные \n   const handleFilter = (event) => {  \n  // отправляет action setFilter со значением value\n  dispatch(setFilter(event.target.value))\n  };\n\n\n    return(<Container><Label>Find contact by Name\n      <Input type=\"text\" onChange={handleFilter} />\n    </Label></Container>)\n}\n\n\nexport default FilterByName;","import { useSelector } from \"react-redux\";\nimport ContactList from \"components/ContactList\";\nimport { TitleContactsSt, ContactsPageSt } from './ContactsPage.styled';\nimport { useFetchContactsQuery } from \"redux/contactSlice\";\nimport Loader from \"components/Loader\";\nimport FilterByName from \"components/FilterByName\";\n\nconst ContactsPage = () => {\n    // ф-я возвращает данные и статусы выполнения\n    const { data = [], isFetching, isSuccess } = useFetchContactsQuery();\n\n    // читает данные из state.filter(store) и подписывается на их обновление\n    const inputData = useSelector(state => state.filter.value)\n   \n    // выдает отфильтрованные контакты\n    const filteredContacts = data.filter(obj => obj.name.toLowerCase().includes(inputData));\n\n    \n   return <ContactsPageSt>\n       {isSuccess && <TitleContactsSt>Contacts</TitleContactsSt>}\n\n       {isFetching && <Loader />}\n       \n       {isSuccess && <FilterByName></FilterByName>}\n       \n       {data && <ContactList contacts={filteredContacts} />}\n   </ContactsPageSt>\n}\n\nexport default ContactsPage;"],"names":["List","styled","Item","Button","id","name","phone","useDeleteContactMutation","deleteContact","isDeleting","isLoading","onClick","disabled","contacts","map","contact","TitleContactsSt","ContactsPageSt","Container","Label","Input","dispatch","useDispatch","type","onChange","event","setFilter","target","value","useFetchContactsQuery","data","isFetching","isSuccess","inputData","useSelector","state","filter","filteredContacts","obj","toLowerCase","includes","Loader"],"sourceRoot":""}